# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: [ '2.6', '2.7' ]

    services:
      postgres:
        image: postgres:12.0
        env:
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby ${{ matrix.ruby }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}

    # Domain Step
    - name: Domain - Install dependencies
      run: cd biblio-domain && bundle install
    - name: Domain - Lint
      run: cd biblio-domain && bundle exec rubocop
    - name: Domain - Setup DB
      run: PGPASSWORD=root psql -h 127.0.0.1 -U postgres -c '\x' -c 'create database bibliodb;'
    - name: Domain - Migrations
      run: cd biblio-domain && DATABASE_URL=postgres://127.0.0.1:5432/bibliodb bundle exec rake db:migrate
    - name: Domain - Run tests
      run: cd biblio-domain && DATABASE_URL=postgres://127.0.0.1:5432/bibliodb bundle exec rake

    # RoR app Step
    - name: Rails App - Install dependencies
      run: cd biblio-rails && bundle install && yarn install
    - name: Rails App - Lint
      run: cd biblio-rails && bundle exec rubocop
    - name: Rails App - Run tests
      run: cd biblio-rails && RAILS_ENV=test DATABASE_URL=postgres://127.0.0.1:5432/bibliodb bundle exec rake
