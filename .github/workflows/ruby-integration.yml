# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby Integration

on:
  push:
    branches: [ master ]
  schedule:
    - cron: 0 23 * * *

jobs:
  domain:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: [ '2.6', '2.7' ]
    defaults:
      run:
        working-directory: domain
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: Install dependencies
        run: bundle install --jobs 4
      - name: Lint
        run: bundle exec rubocop
      - name: Run tests
        run: bundle exec rake test

  infrastructure:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://127.0.0.1:5432/bibliodb
      POSTGRES_PASSWORD: root
    strategy:
      matrix:
        ruby: [ '2.6', '2.7' ]
    services:
      postgres:
        image: postgres:12.0
        ports:
          - 5432:5432
    defaults:
      run:
        working-directory: infrastructure
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: Install dependencies
        run: bundle install --jobs 4
      - name: Lint
        run: bundle exec rubocop
      - name: Run tests
        run: |
          psql -h 127.0.0.1 -U postgres -c '\x' -c 'create database bibliodb;'
          psql -h 127.0.0.1 -U postgres -c '\x' -d 'bibliodb' -c 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
          bundle exec rake db:migrate
          bundle exec rake test


  app:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://127.0.0.1:5432/bibliodb
      POSTGRES_PASSWORD: root
    strategy:
      matrix:
        ruby: [ '2.6', '2.7' ]
    services:
      postgres:
        image: postgres:12.0
        ports:
          - 5432:5432
    defaults:
      run:
        working-directory: app
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: Setup database
        working-directory: infrastructure
        run: |
          psql -h 127.0.0.1 -U postgres -c '\x' -c 'create database bibliodb;'
          psql -h 127.0.0.1 -U postgres -c '\x' -d 'bibliodb' -c 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
          bundle install --jobs 4
          bundle exec rake db:migrate
      - name: Install dependencies
        run: bundle install --jobs 4
      - name: Lint
        run: bundle exec rubocop
      - name: Run tests
        run: |
          bundle exec rake test

  web-rails:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://127.0.0.1:5432/bibliodb
      POSTGRES_PASSWORD: root
      RAILS_ENV: test
    strategy:
      matrix:
        ruby: [ '2.6', '2.7' ]
    services:
      postgres:
        image: postgres:12.0
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - name: Setup database
        working-directory: infrastructure
        run: |
          psql -h 127.0.0.1 -U postgres -c '\x' -c 'create database bibliodb;'
          psql -h 127.0.0.1 -U postgres -c '\x' -d 'bibliodb' -c 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
          bundle install --jobs 4
          bundle exec rake db:migrate
      - name: Install dependencies
        working-directory: web/web-rails
        run: |
          bundle install --jobs 4
          yarn install
      - name: Lint
        working-directory: web/web-rails
        run: bundle exec rubocop
      - name: Run tests
        working-directory: web/web-rails
        run: |
          bundle exec rake test
